#startup_message off
#vbell           off
#verbose         on
hardstatus alwayslastline
#hardstatus string '%{= mK}%-Lw%{= KW}%50>%n%f* %t%{= mK}%+Lw%< %{= kG}%-=%D %d %M %Y %c:%s%{-}'
#hardstatus string '%{= kG}[ %{G}%H %{g}][%= %{= kw}%?%-Lw%?%{r}(%{W}%n*%f%t%?(%u)%?%{r})%{w}%?%+Lw%?%?%= %{g}][%{B} %d/%m%{W}%c %{g}]'
hardstatus string '%{gk}[ %{G}%H %{g}][%= %{wk}%?%-Lw%?%{=b kR}(%{W}%n*%f %t%?(%u)%?%{=b kR})%{= kw}%?%+Lw%?%?%= %{g}][%{Y}%l%{g}]%{=b C}[ %m/%d %c ]%{W}'

#caption always “%{=b wK}%-w%{=b rY}%n %t%{-}% w %=%{= wB}%c%{-} ”

# Plus de lignes à scroller:
#defscrollback 200000
# => ne fonctionne pas, ça ne donne pas plus de lignes à scroller (0 dès qu'on a quitté un écran), et ça semble ralentir le bouzin.

# Galpé depuis https://unix.stackexchange.com/questions/40242/scroll-inside-screen-or-pause-output :
# Enable mouse scrolling and scroll bar history scrolling
termcapinfo xterm* ti@:te@
scrollback 100000
# => mis la même valeur pour le xterm lancé avec un screen dans ~/bin/demarrage; ainsi, c'est cohérent.


# ------------------------------------------------------------------------------
# STARTUP SCREENS
# ------------------------------------------------------------------------------

screen -t postgres      7 bash
# screen -t psql_bdexplo 6 bash -c "psql -p 5432 -h localhost -d bdexplo"
screen -t psql_postgeol 6 bash -c "psql -p 5432 -h localhost -d postgeol"
screen -t taupe         5 htop -d 50
screen -t ROUTE         4 bash
screen -t mc            3 mc
screen -t lanceur       2 bash
screen -t aarchives     1 bash
screen -t nnotes        0 bash # -c "vi nnotes.txt"

#screen -t mail 8 mutt
#screen -t daemon 9 tail -f /var/log/daemon.log
